Program Node
  Function: nonsense: Void type
    CompoundStatement
      Return
        Integer: 42
  Function: uhOh: Int type
    Parameter: x[]: Int type
    CompoundStatement
      ExpressionStatement
        Assignment
          Subscript: x: Int type
            Index:
              Subscript: x: Int type
                Index:
                  Integer: 0
          Variable: x: Int type
      Return
        Subscript: x: Int type
          Index:
            Variable: x: Int type
  Function: bidingTime: Void type
    CompoundStatement
      ExpressionStatement
      ExpressionStatement
      ExpressionStatement
      ExpressionStatement
  Function: both: Int type
    Parameter: x: Int type
    Parameter: y: Int type
    CompoundStatement
      If
        MultiplicativeExpression: *
          Left:
            Assignment
              Variable: x: Int type
              Variable: y: Int type
          Right:
            Assignment
              Variable: y: Int type
              Variable: x: Int type
        CompoundStatement
          Return
            RelationalExpression: ==
              Left:
                Variable: x: Int type
              Right:
                Variable: y: Int type
        CompoundStatement
          Return
            AdditiveExpression: +
              Left:
                RelationalExpression: !=
                  Left:
                    Variable: x: Int type
                  Right:
                    Variable: y: Int type
              Right:
                RelationalExpression: !=
                  Left:
                    Variable: y: Int type
                  Right:
                    Variable: x: Int type
