Program Node
  Variable: x[10]: Int type
  Function: minloc: Int type
    Parameter: a[]: Int type
    Parameter: low: Int type
    Parameter: high: Int type
    CompoundStatement
      VariableDeclaration: i: Int type
      VariableDeclaration: x: Int type
      VariableDeclaration: k: Int type
      ExpressionStatement
        Assignment
          Variable: k: Int type
          Variable: low: Int type
      ExpressionStatement
        Assignment
          Variable: x: Int type
          Subscript: a: Int type
            Index:
              Variable: low: Int type
      ExpressionStatement
        Assignment
          Variable: i: Int type
          AdditiveExpression: +
            Left:
              Variable: low: Int type
            Right:
              Integer: 1
      While
        RelationalExpression: <
          Left:
            Variable: i: Int type
          Right:
            Variable: high: Int type
        CompoundStatement
          If
            RelationalExpression: <
              Left:
                Subscript: a: Int type
                  Index:
                    Variable: i: Int type
              Right:
                Variable: x: Int type
            CompoundStatement
              ExpressionStatement
                Assignment
                  Variable: x: Int type
                  Subscript: a: Int type
                    Index:
                      Variable: i: Int type
              ExpressionStatement
                Assignment
                  Variable: k: Int type
                  Variable: i: Int type
          ExpressionStatement
            Assignment
              Variable: i: Int type
              AdditiveExpression: +
                Left:
                  Variable: i: Int type
                Right:
                  Integer: 1
      Return
        Variable: k: Int type
  Function: sort: Void type
    Parameter: a[]: Int type
    Parameter: low: Int type
    Parameter: high: Int type
    CompoundStatement
      VariableDeclaration: i: Int type
      VariableDeclaration: k: Int type
      ExpressionStatement
        Assignment
          Variable: i: Int type
          Variable: low: Int type
      While
        RelationalExpression: <
          Left:
            Variable: i: Int type
          Right:
            AdditiveExpression: -
              Left:
                Variable: high: Int type
              Right:
                Integer: 1
        CompoundStatement
          VariableDeclaration: t: Int type
          ExpressionStatement
            Assignment
              Variable: k: Int type
              FunctionCall: minloc: Int type
                Arguments:
                  Variable: a: Int type
                  Variable: i: Int type
                  Variable: high: Int type
          ExpressionStatement
            Assignment
              Variable: t: Int type
              Subscript: a: Int type
                Index:
                  Variable: k: Int type
          ExpressionStatement
            Assignment
              Subscript: a: Int type
                Index:
                  Variable: k: Int type
              Subscript: a: Int type
                Index:
                  Variable: i: Int type
          ExpressionStatement
            Assignment
              Subscript: a: Int type
                Index:
                  Variable: i: Int type
              Variable: t: Int type
          ExpressionStatement
            Assignment
              Variable: i: Int type
              AdditiveExpression: +
                Left:
                  Variable: i: Int type
                Right:
                  Integer: 1
  Function: main: Void type
    CompoundStatement
      VariableDeclaration: i: Int type
      ExpressionStatement
        Assignment
          Variable: i: Int type
          Integer: 0
      While
        RelationalExpression: <
          Left:
            Variable: i: Int type
          Right:
            Integer: 10
        CompoundStatement
          ExpressionStatement
            Assignment
              Subscript: x: Int type
                Index:
                  Variable: i: Int type
              FunctionCall: input: ()
          ExpressionStatement
            Assignment
              Variable: i: Int type
              AdditiveExpression: +
                Left:
                  Variable: i: Int type
                Right:
                  Integer: 1
      ExpressionStatement
        FunctionCall: sort: Void type
          Arguments:
            Variable: x: Int type
            Integer: 0
            Integer: 10
      ExpressionStatement
        Assignment
          Variable: i: Int type
          Integer: 0
      While
        RelationalExpression: <
          Left:
            Variable: i: Int type
          Right:
            Integer: 10
        CompoundStatement
          ExpressionStatement
            FunctionCall: output: Void type
              Arguments:
                Subscript: x: Int type
                  Index:
                    Variable: i: Int type
          ExpressionStatement
            Assignment
              Variable: i: Int type
              AdditiveExpression: +
                Left:
                  Variable: i: Int type
                Right:
                  Integer: 1
