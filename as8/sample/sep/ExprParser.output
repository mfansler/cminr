Grammar

    0 $accept: input $end

    1 input: input command
    2      | command

    3 command: exp NEWLINE
    4        | NEWLINE

    5 exp: exp PLUS term
    6    | exp MINUS term
    7    | term

    8 term: term TIMES pow
    9     | term DIVIDE pow
   10     | term MODULUS pow
   11     | pow

   12 pow: factor CARET pow
   13    | factor

   14 factor: NUM
   15       | MINUS NUM
   16       | LPAREN exp RPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 14 15
PLUS (259) 5
MINUS (260) 6 15
TIMES (261) 8
DIVIDE (262) 9
MODULUS (263) 10
LPAREN (264) 16
RPAREN (265) 16
CARET (266) 12
NEWLINE (267) 3 4


Nonterminals, with rules where they appear

$accept (13)
    on left: 0
input (14)
    on left: 1 2, on right: 0 1
command (15)
    on left: 3 4, on right: 1 2
exp (16)
    on left: 5 6 7, on right: 3 5 6 16
term (17)
    on left: 8 9 10 11, on right: 5 6 7 8 9 10
pow (18)
    on left: 12 13, on right: 8 9 10 11 12
factor (19)
    on left: 14 15 16, on right: 12 13


State 0

    0 $accept: . input $end

    NUM      shift, and go to state 1
    MINUS    shift, and go to state 2
    LPAREN   shift, and go to state 3
    NEWLINE  shift, and go to state 4

    input    go to state 5
    command  go to state 6
    exp      go to state 7
    term     go to state 8
    pow      go to state 9
    factor   go to state 10


State 1

   14 factor: NUM .

    $default  reduce using rule 14 (factor)


State 2

   15 factor: MINUS . NUM

    NUM  shift, and go to state 11


State 3

   16 factor: LPAREN . exp RPAREN

    NUM     shift, and go to state 1
    MINUS   shift, and go to state 2
    LPAREN  shift, and go to state 3

    exp     go to state 12
    term    go to state 8
    pow     go to state 9
    factor  go to state 10


State 4

    4 command: NEWLINE .

    $default  reduce using rule 4 (command)


State 5

    0 $accept: input . $end
    1 input: input . command

    $end     shift, and go to state 13
    NUM      shift, and go to state 1
    MINUS    shift, and go to state 2
    LPAREN   shift, and go to state 3
    NEWLINE  shift, and go to state 4

    command  go to state 14
    exp      go to state 7
    term     go to state 8
    pow      go to state 9
    factor   go to state 10


State 6

    2 input: command .

    $default  reduce using rule 2 (input)


State 7

    3 command: exp . NEWLINE
    5 exp: exp . PLUS term
    6    | exp . MINUS term

    PLUS     shift, and go to state 15
    MINUS    shift, and go to state 16
    NEWLINE  shift, and go to state 17


State 8

    7 exp: term .
    8 term: term . TIMES pow
    9     | term . DIVIDE pow
   10     | term . MODULUS pow

    TIMES    shift, and go to state 18
    DIVIDE   shift, and go to state 19
    MODULUS  shift, and go to state 20

    $default  reduce using rule 7 (exp)


State 9

   11 term: pow .

    $default  reduce using rule 11 (term)


State 10

   12 pow: factor . CARET pow
   13    | factor .

    CARET  shift, and go to state 21

    $default  reduce using rule 13 (pow)


State 11

   15 factor: MINUS NUM .

    $default  reduce using rule 15 (factor)


State 12

    5 exp: exp . PLUS term
    6    | exp . MINUS term
   16 factor: LPAREN exp . RPAREN

    PLUS    shift, and go to state 15
    MINUS   shift, and go to state 16
    RPAREN  shift, and go to state 22


State 13

    0 $accept: input $end .

    $default  accept


State 14

    1 input: input command .

    $default  reduce using rule 1 (input)


State 15

    5 exp: exp PLUS . term

    NUM     shift, and go to state 1
    MINUS   shift, and go to state 2
    LPAREN  shift, and go to state 3

    term    go to state 23
    pow     go to state 9
    factor  go to state 10


State 16

    6 exp: exp MINUS . term

    NUM     shift, and go to state 1
    MINUS   shift, and go to state 2
    LPAREN  shift, and go to state 3

    term    go to state 24
    pow     go to state 9
    factor  go to state 10


State 17

    3 command: exp NEWLINE .

    $default  reduce using rule 3 (command)


State 18

    8 term: term TIMES . pow

    NUM     shift, and go to state 1
    MINUS   shift, and go to state 2
    LPAREN  shift, and go to state 3

    pow     go to state 25
    factor  go to state 10


State 19

    9 term: term DIVIDE . pow

    NUM     shift, and go to state 1
    MINUS   shift, and go to state 2
    LPAREN  shift, and go to state 3

    pow     go to state 26
    factor  go to state 10


State 20

   10 term: term MODULUS . pow

    NUM     shift, and go to state 1
    MINUS   shift, and go to state 2
    LPAREN  shift, and go to state 3

    pow     go to state 27
    factor  go to state 10


State 21

   12 pow: factor CARET . pow

    NUM     shift, and go to state 1
    MINUS   shift, and go to state 2
    LPAREN  shift, and go to state 3

    pow     go to state 28
    factor  go to state 10


State 22

   16 factor: LPAREN exp RPAREN .

    $default  reduce using rule 16 (factor)


State 23

    5 exp: exp PLUS term .
    8 term: term . TIMES pow
    9     | term . DIVIDE pow
   10     | term . MODULUS pow

    TIMES    shift, and go to state 18
    DIVIDE   shift, and go to state 19
    MODULUS  shift, and go to state 20

    $default  reduce using rule 5 (exp)


State 24

    6 exp: exp MINUS term .
    8 term: term . TIMES pow
    9     | term . DIVIDE pow
   10     | term . MODULUS pow

    TIMES    shift, and go to state 18
    DIVIDE   shift, and go to state 19
    MODULUS  shift, and go to state 20

    $default  reduce using rule 6 (exp)


State 25

    8 term: term TIMES pow .

    $default  reduce using rule 8 (term)


State 26

    9 term: term DIVIDE pow .

    $default  reduce using rule 9 (term)


State 27

   10 term: term MODULUS pow .

    $default  reduce using rule 10 (term)


State 28

   12 pow: factor CARET pow .

    $default  reduce using rule 12 (pow)
